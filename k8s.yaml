apiVersion: v1
kind: Namespace
metadata:
  name: proyectoweb-dev

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proyecto-web
  namespace: proyectoweb-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proyecto-web
  template: 
    metadata:
      labels:
        app: proyecto-web
    spec:
      imagePullSecrets:
        - name: ghcr-secret
        
      containers:
        - name: proyecto-web
          image: ghcr.io/melrock08/proyecto_web:latest
          ports:
            - containerPort: 8080   # Spring Boot usa 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://<IP_VM_MYSQL>:3306/<NOMBRE_BD>?useSSL=false&serverTimezone=UTC
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: password

---
apiVersion: v1
kind: Service
metadata:
  name: proyecto-web
  namespace: proyectoweb-dev
spec:
  selector:
    app: proyecto-web
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: proyecto-web-ingress
  namespace: proyectoweb-dev
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: public   # normalmente en MicroK8s es "public"
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: proyecto-web
                port:
                  number: 8080

